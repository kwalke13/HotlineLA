<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_npc</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_npc</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed=1;

last_seen_x=0;
last_seen_y=0;

start_x =x;
start_y =y;

retreat = false;
retreating=false;
basic=true;
        
dummy_path=path_add();
path_set_kind(dummy_path,1);
path_set_precision(dummy_path,8);
new_grid=mp_grid_create(0,0,room_width/32,room_height/32,32,32); //mp_grid_create(view_xview[0], view_yview[0], room_width/16,room_height/16,16,16); //

mp_grid_add_instances(new_grid,obj_solid,true);
mp_grid_add_instances(new_grid,obj_npc,true);

view_range=500;

distance_traveled=0;


retreat_speed = 2;
status=0;       //0 = standard movement, 1 = chase
blood_count=random(100)+100;
hp=100;
dead=false;
wait=0;
turn_time=random(50)+80;
alarm[0]=turn_time;


direction = choose(90,0,270,180);
image_angle=direction;

npc_target = instance_create(x,y,obj_npc_target);
target_dist=32;

checker_text="";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message("alarm");
if random(20) &lt; 5
direction += 90;
else if random(20) &lt; 10
direction -= 90;
else if random(20) &lt; 15
direction -= 45;
else if random(20) &lt; 20
direction += 45;

if(random(1) &lt; .7){
    speed=1;
    
}
else
    speed=0;

image_angle=direction;


alarm[0] = turn_time;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// todo
// none

// points for sight cone
var x1 = x + lengthdir_x(view_range, image_angle - 45);
        var y1 = y + lengthdir_y(view_range, image_angle - 45);
        var x2 = x + lengthdir_x(view_range, image_angle + 45);
        var y2 = y + lengthdir_y(view_range, image_angle + 45);


        
        
// check dead
if(hp&lt;=0){
    path_end();
    alarm[0]=-1;
    dead=true;
    sprite_index=sp_enemy_dead;
    speed=0;
}
else{
// when to set retreat
// blood
if( instance_exists(obj_blood) &amp;&amp; retreat != true){
    blood = instance_nearest(x,y,obj_blood);
    if(point_in_triangle(blood.x, blood.y, x, y, x1, y1, x2, y2)){
        retreat = true;
        retreating=true;
        basic=false;
    }
}
// alert
if(global.alert=true &amp;&amp; retreat != true){
    retreat = true;
    retreating=true;
    basic=false;
}

// RETREAT MOVEMENT
if(retreat==true){
    direction = point_direction(x,y,npc_target.x,npc_target.y);
    image_angle=direction;
    if(retreating==true){
    speed=0;
    alarm[0]=-1;
    npc_target.x=obj_retreat.x+floor(random(100));
    npc_target.y=obj_retreat.y+floor(random(100));
    direction = point_direction(x,y,npc_target.x,npc_target.y);
    image_angle=direction;
    mp_grid_path(new_grid,dummy_path,x,y,npc_target.x,npc_target.y,true);

    path_start(dummy_path,retreat_speed,1,1);
    retreating=false;
    }
    if(point_in_circle(x,y,npc_target.x,npc_target.y,10)){
       path_end();
    }
}   // end retreat
else{
/// BASIC MOVEMENT
if(direction==0){
    npc_target.x=x+target_dist;
    npc_target.y=y;
}
else if(direction==45){
    npc_target.y=y-target_dist;
    npc_target.x=x+target_dist;
}
else if(direction==90){
    npc_target.y=y-target_dist;
    npc_target.x=x;
}
else if(direction==135){
    npc_target.y=y-target_dist;
    npc_target.x=x-target_dist;
}
else if(direction==180){
    npc_target.x=x-target_dist;
    npc_target.y=y;
}
else if(direction==225){
    npc_target.y=y+target_dist;
    npc_target.x=x-target_dist;
}
else if(direction==270){
    npc_target.y=y+target_dist;
    npc_target.x=x;
}
else if(direction==315){
    npc_target.y=y+target_dist;
    npc_target.x=x+target_dist;
}
   
if(place_meeting(npc_target.x,npc_target.y,obj_solid) || place_meeting(npc_target.x,npc_target.y,obj_npc) || place_meeting(npc_target.x,npc_target.y,obj_restriction))
{
    direction+=45;
    image_angle=direction;    
}
}   // end basic


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_weapon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp-=100;

repeat(blood_count) instance_create(x,y,obj_blood);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mp_grid_draw(new_grid);
draw_self();
draw_text(x+20,y, "speed: "+string(speed));
//draw_text(x+20,y+20, "seen x: "+string(last_seen_x));
//draw_text(x+20,y-20, "seen y: "+string(last_seen_y));
draw_text(x-40,y, "dir: "+string(direction));
draw_text(x-40,y+20, "tar x: "+string(npc_target.x));
draw_text(x-40,y-20, "tar y: "+string(npc_target.y));
draw_text(x,y-30, "retreat: "+string(retreat));

        var x1 = x + lengthdir_x(view_range, image_angle - 45);
        var y1 = y + lengthdir_y(view_range, image_angle - 45);
        var x2 = x + lengthdir_x(view_range, image_angle + 45);
        var y2 = y + lengthdir_y(view_range, image_angle + 45);
draw_triangle(x,y,x1,y1,x2,y2,1);
draw_line(x,y,npc_target.x,npc_target.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
